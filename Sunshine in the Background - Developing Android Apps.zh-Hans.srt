1
00:00:00,140 --> 00:00:03,740
还记得在第二课里Katherine用了

2
00:00:03,740 --> 00:00:06,400
异步任务(AsyncTask)接上更新按钮

3
00:00:06,400 --> 00:00:07,990
来更新数据吗？

4
00:00:07,990 --> 00:00:10,710
Rato解释过这为什么是个馊主意

5
00:00:10,710 --> 00:00:14,690
因为异步任务不受活动生命周期限制

6
00:00:14,690 --> 00:00:18,090
只要异步任务在运行中

7
00:00:18,090 --> 00:00:20,780
虚拟机器就可以保留活动目标

8
00:00:20,780 --> 00:00:24,010
即便安卓已经对活动调用了onDestroy

9
00:00:24,010 --> 00:00:25,983
而且预期它被丢弃

10
00:00:25,983 --> 00:00:27,726
如果你旋转手机屏幕

11
00:00:27,726 --> 00:00:31,810
会摧毁你的活动并且实例化一个新的

12
00:00:31,810 --> 00:00:38,300
单纯的异步任务装置现在有两个线程在完成同一个更新

13
00:00:38,300 --> 00:00:43,739
关键是 这样不利于可能会很久的后台操作

14
00:00:43,740 --> 00:00:45,550
比如从网络服务获取数据

15
00:00:45,550 --> 00:00:48,580
如果你关闭这个程序 异步任务会持续运行

16
00:00:48,580 --> 00:00:51,280
只要处理不断

17
00:00:51,280 --> 00:00:52,990
但会以低优先级运行

18
00:00:52,990 --> 00:00:55,250
而且如果设备需要更多资源

19
00:00:55,250 --> 00:00:57,240
你的处理会首先被终止

20
00:00:57,240 --> 00:00:59,270
而且还有一个更大的问题

21
00:00:59,270 --> 00:01:04,170
这个程序必须可见 在前台运行 才能实例化任务

22
00:01:04,170 --> 00:01:06,380
因为我们开始了一个任务

23
00:01:06,380 --> 00:01:08,759
在初始程序时更新天气

24
00:01:08,760 --> 00:01:10,940
如果天气有较为急速的变化

25
00:01:10,940 --> 00:01:12,950
程序可能会有我们不想看到的反应

26
00:01:12,950 --> 00:01:16,110
所以我们要学习正确的执行更新的方法

27
00:01:16,110 --> 00:01:19,636
我们需要在程序在前台时自动化更新

28
00:01:19,636 --> 00:01:23,447
但更重要的是 我们想要程序在耗电最小的情况下

29
00:01:23,447 --> 00:01:26,038
在后台进行常规更新

30
00:01:26,038 --> 00:01:31,070
这在之后我们介绍天气推送时会特别重要

