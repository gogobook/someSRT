1
00:00:00,240 --> 00:00:03,019
让我们来看看使用一个非常基本的同步适配器

2
00:00:03,020 --> 00:00:04,840
需要些什么

3
00:00:04,840 --> 00:00:07,730
我们需要写两个服务

4
00:00:07,730 --> 00:00:09,870
每个服务完成一个基本目的

5
00:00:09,870 --> 00:00:15,780
把一个代表安卓活页夹界面的物体传送到系统框架中去

6
00:00:15,780 --> 00:00:18,320
活页夹相当于一种低级胶水

7
00:00:18,320 --> 00:00:21,620
粘合安卓系统里的交叉处理通信

8
00:00:21,620 --> 00:00:24,030
其实每次你声控安卓系统服务时

9
00:00:24,030 --> 00:00:26,750
都使用到了安卓活页夹

10
00:00:26,750 --> 00:00:31,990
目的和内容供应商只是在活页夹界面之上的高级抽象

11
00:00:31,990 --> 00:00:36,879
有一种称为AIDL的语言就是用来帮助定义这些界面的

12
00:00:36,880 --> 00:00:38,800
在此我们不能涉及所有内容

13
00:00:38,800 --> 00:00:41,980
但是服务和活页夹还有很多其他用处

14
00:00:41,980 --> 00:00:43,989
在正式开始前还有一件事

15
00:00:43,990 --> 00:00:47,740
我们需要定义一个认证器服务和一个认证器

16
00:00:47,740 --> 00:00:51,090
这只供安卓账号体系使用

17
00:00:51,090 --> 00:00:53,030
来允许我们创建账号

18
00:00:53,030 --> 00:00:55,320
同步适配器需要一个账号

19
00:00:55,320 --> 00:01:00,090
而账号体系需要一个由认证器服务传送的认证器

20
00:01:00,090 --> 00:01:03,430
你会看到我们的认证器只是一连串的桩

21
00:01:03,430 --> 00:01:06,060
加上一些每次调用时会抛出的异常

22
00:01:06,060 --> 00:01:08,290
来证明它不是真的被使用着

23
00:01:08,290 --> 00:01:10,160
最后一件事

24
00:01:10,160 --> 00:01:15,000
这个部分基本按照developer.android.com

25
00:01:15,000 --> 00:01:18,230
关于同步适配器的网上训练而制作

26
00:01:18,230 --> 00:01:21,640
如果你有更多问题可以去那儿看看

27
00:01:21,640 --> 00:01:24,160
接下来我们要创建一个新的程序包 命名为“同步”

28
00:01:24,160 --> 00:01:26,700
来存储这些好东西

29
00:01:26,700 --> 00:01:30,370
之后我们要为认证器创建一个新的类文件

30
00:01:30,370 --> 00:01:36,430
这个代码我们只需要直接从developer.android.com复制过来

31
00:01:36,430 --> 00:01:39,250
就像我之前说的 它只是一个桩

32
00:01:39,250 --> 00:01:43,700
你能看得出来因为我们调用任何功能都抛出异常

33
00:01:43,700 --> 00:01:45,790
除了构造器之外

34
00:01:45,790 --> 00:01:48,583
我们还需要一个文件

35
00:01:48,583 --> 00:01:50,795
创建SunshineAuthenticatorService

36
00:01:50,796 --> 00:01:53,360
这里会存放更多为我们而写的代码

37
00:01:53,360 --> 00:01:58,720
它允许账户管理器访问我们刚刚复制进来的空的认证器

38
00:01:58,720 --> 00:02:02,950
现在我们可以在strings.xml中加入账号类型

39
00:02:02,950 --> 00:02:06,870
账号类型字符串表明这是专门在这个程序中使用的

40
00:02:06,880 --> 00:02:10,370
如果用同一个账号开发了很多程序

41
00:02:10,370 --> 00:02:14,250
最好创建一个example.com账号

42
00:02:14,250 --> 00:02:16,090
我们还想要做些清理工作

43
00:02:16,090 --> 00:02:18,201
然后加入一个内容权限字符串

44
00:02:18,201 --> 00:02:20,790
注意 这应该与内容供应商的字符串相符

45
00:02:20,790 --> 00:02:25,920
等下我们可以修复XML文件使它们用同一个字符串

46
00:02:25,920 --> 00:02:31,250
接着创建一个新的XML源文件 命名为authenticator.xml

47
00:02:31,250 --> 00:02:34,590
根元素设为 账户认证器

48
00:02:34,590 --> 00:02:39,490
你可能已经发现 阳光认证器服务其实需要

49
00:02:39,490 --> 00:02:44,720
在AndroidManifest.xml中用程序包管理器注册

50
00:02:44,720 --> 00:02:48,290
这里还有更多好东西来帮你完成这一项

51
00:02:48,290 --> 00:02:49,950
现在可要小心啦

52
00:02:49,950 --> 00:02:52,899
这些字符串都需要完全匹配上

53
00:02:52,900 --> 00:02:56,250
系统提示的错误账号信息

54
00:02:56,250 --> 00:02:58,800
并不一定是直觉性的

55
00:02:58,800 --> 00:03:00,572
当你完全匹配字符串之后

56
00:03:00,572 --> 00:03:02,140
应该就可以创建有效账号了

57
00:03:02,140 --> 00:03:07,010
再说一次 这些都是为了同步适配器能与一个账号相连

58
00:03:07,010 --> 00:03:09,018
我们实际不需要使用它

59
00:03:09,019 --> 00:03:12,990
好的 让我们微调一下清单中的供应商标签

60
00:03:12,990 --> 00:03:15,390
我们要加入可同步的属性

61
00:03:15,390 --> 00:03:18,256
这样安卓就能知道我们打算将内容供应商

62
00:03:18,256 --> 00:03:19,484
与服务器同步

63
00:03:19,484 --> 00:03:23,212
同时 我们把android:exported设为伪代码

64
00:03:23,212 --> 00:03:25,251
这和默认状态一致

65
00:03:25,252 --> 00:03:28,000
代表着其他程序能看到我们的内容

66
00:03:28,000 --> 00:03:31,270
最后 把权限改成使用我们新写的字符串

67
00:03:31,270 --> 00:03:34,020
现在来处理一些其他的许可权

68
00:03:34,020 --> 00:03:37,010
我们需要可以读写同步设置

69
00:03:37,010 --> 00:03:38,459
这些都好理解

70
00:03:38,460 --> 00:03:43,470
虽然并不是真的要用 我们还需要认证账号

71
00:03:43,470 --> 00:03:46,653
用户不应该需要为这些许可权担心

72
00:03:46,653 --> 00:03:51,790
但是作为开发者 我们应该在添加新许可权时额外小心

73
00:03:51,790 --> 00:03:55,623
接着我们在”同步”中创建阳光同步适配器文档

74
00:03:55,623 --> 00:03:59,016
这能扩大抽象线程同步适配器分类

75
00:03:59,016 --> 00:04:01,579
按下Ctrl+I和Ctrl+O

76
00:04:01,580 --> 00:04:05,010
来在构造器中实施必需的抽象方法

77
00:04:05,010 --> 00:04:08,510
我们使用第一构造器 可以等会再来填这个

78
00:04:08,510 --> 00:04:12,060
你可能还记得 同步适配器模式需要另一个服务

79
00:04:12,060 --> 00:04:16,750
所以我们得再创建一个Java类叫做阳光同步服务

80
00:04:16,750 --> 00:04:21,709
这个类用于把同步适配器活页夹传送到同步管理器中

81
00:04:21,709 --> 00:04:27,219
活页夹使用抽象线程同步适配类

82
00:04:27,230 --> 00:04:30,730
然后用getSyncAdapterBinder方式返回

83
00:04:30,730 --> 00:04:33,460
现在我们还需要一个XML文件

84
00:04:33,460 --> 00:04:37,669
创建syncadapter.xml 设置根元素：同步适配器

85
00:04:37,670 --> 00:04:42,490
同样的 这个XML文件定义了与我们的同步适配器相关的设置

86
00:04:42,490 --> 00:04:44,060
包括它的内容权限

87
00:04:44,060 --> 00:04:46,000
所同步的账号类型

88
00:04:46,000 --> 00:04:48,230
是否对用户可见

89
00:04:48,230 --> 00:04:49,930
是否支持上载

90
00:04:49,930 --> 00:04:53,720
--上载会改变内容供应商和同步适配器互动的方式--

91
00:04:53,720 --> 00:04:57,140
是否允许平行同步 以及是否总是可同步的

92
00:04:57,140 --> 00:05:00,252
这些设置是为这个程序量身而定的

93
00:05:00,252 --> 00:05:02,030
而且我觉得你能猜到接下来我们要做什么

94
00:05:02,030 --> 00:05:06,169
你猜对了 我们需要向程序包管理器注册同步适配器服务

95
00:05:06,170 --> 00:05:11,850
所以我们需要创建更多清单条目 包括一些重要的元数据

96
00:05:11,850 --> 00:05:15,190
其中最重要的是与我们刚创建的文档相连的链接

97
00:05:15,190 --> 00:05:17,740
好的 我们快要完成了

98
00:05:17,740 --> 00:05:21,010
接下来我们可以开始做同步适配器

99
00:05:21,010 --> 00:05:24,730
我们可以从帮助功能开始 注册一个虚拟同步账号

100
00:05:24,730 --> 00:05:27,480
然后确保它被创建出来了

101
00:05:27,480 --> 00:05:30,490
之后 我们可以在同步适配器中增加另一个帮助功能

102
00:05:30,490 --> 00:05:33,310
使测试我们的同步适配器更加简单

